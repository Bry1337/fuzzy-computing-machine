/*
 * Copyright 2015 Vincent Brison.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task. (removed '')
check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

def configDir = "${project.rootDir}/gradle/config/quality"
def reportsDir = "${project.buildDir}/reports"

task checkstyle(type: Checkstyle) {
  ignoreFailures = false
  showViolations = false

  configFile file("$configDir/checkstyle/checkstyle.xml")
  configProperties.checkstyleSuppressionsPath =
      file("$configDir/checkstyle/suppressions.xml").absolutePath

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    html {
      destination "$reportsDir/checkstyle/checkstyle.html"
    }
  }

  classpath = files()
}

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
  ignoreFailures = false
  effort = "max"
  reportLevel = "high"
  excludeFilter = new File("$configDir/findbugs/findbugs-filter.xml")
  classes = files("${project.rootDir}/app/build/intermediates/classes")

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    html {
      destination "$reportsDir/findbugs/findbugs.html"
    }
  }

  classpath = files()
}

task pmd(type: Pmd) {
  ignoreFailures = false
  ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
  ruleSets = []

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    html {
      destination "$reportsDir/pmd/pmd.html"
    }
  }
}

android {
  lintOptions {
    lintConfig file("$configDir/lint/lint.xml")
    abortOnError false
    xmlReport false
    htmlReport true
    htmlOutput file("$reportsDir/lint/lint-result.html")
  }
}
